{"version":3,"sources":["Components/Forms/AddEditForm.js","Components/Modals/Modal.js","Components/Tables/DataTable.js","App.js","serviceWorker.js","index.js"],"names":["AddEditForm","state","id","first","last","email","phone","location","hobby","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","props","addItemToState","toggle","console","log","catch","err","submitFormEdit","updateState","this","Form","onSubmit","FormGroup","Label","for","Input","type","placeholder","Button","React","Component","ModalForm","prevState","modal","closeBtn","className","onClick","label","buttonLabel","button","title","color","style","float","marginRight","Modal","isOpen","ModalHeader","close","ModalBody","DataTable","deleteItem","window","confirm","deleteItemFromState","items","map","key","scope","width","Table","responsive","hover","App","itemIndex","findIndex","data","newArray","slice","updatedItems","filter","getItems","Container","Row","Col","margin","filename","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f6e2fb78.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass AddEditForm extends React.Component {\r\n    state = {\r\n        id: 0,\r\n        first: '',\r\n        last: '',\r\n        email: '',\r\n        phone: '',\r\n        location: '',\r\n        hobby: ''\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    submitFormAdd = e => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:3000/crud', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                first: this.state.first,\r\n                last: this.state.last,\r\n                email: this.state.email,\r\n                phone: this.state.phone,\r\n                location: this.state.location,\r\n                hobby: this.state.hobby\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                if(Array.isArray(item)) {\r\n                    this.props.addItemToState(item[0])\r\n                    this.props.toggle()\r\n                } else {\r\n                    console.log('failure')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    submitFormEdit = e => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:3000/crud', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.state.id,\r\n                first: this.state.first,\r\n                last: this.state.last,\r\n                email: this.state.email,\r\n                phone: this.state.phone,\r\n                location: this.state.location,\r\n                hobby: this.state.hobby\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                if(Array.isArray(item)) {\r\n                    // console.log(item[0])\r\n                    this.props.updateState(item[0])\r\n                    this.props.toggle()\r\n                } else {\r\n                    console.log('failure')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount(){\r\n        // if item exists, populate the state with proper data\r\n        if(this.props.item){\r\n            const { id, first, last, email, phone, location, hobby } = this.props.item\r\n            this.setState({ id, first, last, email, phone, location, hobby })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\r\n                <FormGroup>\r\n                    <Label for=\"first\">First Name</Label>\r\n                    <Input type=\"text\" name=\"first\" id=\"first\" onChange={this.onChange} value={this.state.first === null ? '' : this.state.first} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"last\">Last Name</Label>\r\n                    <Input type=\"text\" name=\"last\" id=\"last\" onChange={this.onChange} value={this.state.last === null ? '' : this.state.last}  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email}  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"phone\">Phone</Label>\r\n                    <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone}  placeholder=\"ex. 555-555-5555\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"location\">Location</Label>\r\n                    <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location}  placeholder=\"City, State\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"hobby\">Hobby</Label>\r\n                    <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={this.onChange} value={this.state.hobby}  />\r\n                </FormGroup>\r\n                <Button>Submit</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEditForm","import React, { Component } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport AddEditForm from '../Forms/AddEditForm'\r\n\r\nclass ModalForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\r\n\r\n        const label = this.props.buttonLabel\r\n\r\n        let button = ''\r\n        let title = ''\r\n\r\n        if(label === 'Edit'){\r\n            button = <Button\r\n                color=\"warning\"\r\n                onClick={this.toggle}\r\n                style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n            </Button>\r\n            title = 'Edit Item'\r\n        } else {\r\n            button = <Button\r\n                color=\"success\"\r\n                onClick={this.toggle}\r\n                style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n            </Button>\r\n            title = 'Add New Item'\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                {button}\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\r\n                    <ModalBody>\r\n                        <AddEditForm\r\n                            addItemToState={this.props.addItemToState}\r\n                            updateState={this.props.updateState}\r\n                            toggle={this.toggle}\r\n                            item={this.props.item} />\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalForm","import React, { Component } from 'react'\r\nimport { Table, Button } from 'reactstrap';\r\nimport ModalForm from '../Modals/Modal'\r\n\r\nclass DataTable extends Component {\r\n\r\n    deleteItem = id => {\r\n        let confirmDelete = window.confirm('Delete item forever?')\r\n        if(confirmDelete){\r\n            fetch('http://localhost:3000/crud', {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(item => {\r\n                    this.props.deleteItemFromState(id)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const items = this.props.items.map(item => {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <th scope=\"row\">{item.id}</th>\r\n                    <td>{item.first}</td>\r\n                    <td>{item.last}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n                    <td>{item.location}</td>\r\n                    <td>{item.hobby}</td>\r\n                    <td>\r\n                        <div style={{width:\"110px\"}}>\r\n                            <ModalForm buttonLabel=\"Edit\" item={item} updateState={this.props.updateState}/>\r\n                            {' '}\r\n                            <Button color=\"danger\" onClick={() => this.deleteItem(item.id)}>Del</Button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Table responsive hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>First</th>\r\n                    <th>Last</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Location</th>\r\n                    <th>Hobby</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {items}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTable","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport ModalForm from './Components/Modals/Modal'\r\nimport DataTable from './Components/Tables/DataTable'\r\nimport { CSVLink } from \"react-csv\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    items: []\r\n  }\r\n\r\n  getItems(){\r\n    fetch('http://localhost:3000/crud')\r\n        .then(response => response.json())\r\n        .then(items => this.setState({items}))\r\n        .catch(err => console.log(err))\r\n  }\r\n\r\n  addItemToState = (item) => {\r\n    this.setState(prevState => ({\r\n      items: [...prevState.items, item]\r\n    }))\r\n  }\r\n\r\n  updateState = (item) => {\r\n    const itemIndex = this.state.items.findIndex(data => data.id === item.id)\r\n    const newArray = [\r\n      // destructure all items from beginning to the indexed item\r\n      ...this.state.items.slice(0, itemIndex),\r\n      // add the updated item to the array\r\n      item,\r\n      // add the rest of the items to the array from the index after the replaced item\r\n      ...this.state.items.slice(itemIndex + 1)\r\n    ]\r\n    this.setState({ items: newArray })\r\n  }\r\n\r\n  deleteItemFromState = (id) => {\r\n    const updatedItems = this.state.items.filter(item => item.id !== id)\r\n    this.setState({ items: updatedItems })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getItems()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Container className=\"App\">\r\n          <Row>\r\n            <Col>\r\n              <h1 style={{margin: \"20px 0\"}}>CRUD Database</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <DataTable items={this.state.items} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <CSVLink\r\n                  filename={\"db.csv\"}\r\n                  color=\"primary\"\r\n                  style={{float: \"left\", marginRight: \"10px\"}}\r\n                  className=\"btn btn-primary\"\r\n                  data={this.state.items}>\r\n                Download CSV\r\n              </CSVLink>\r\n              <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//added for customization\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}